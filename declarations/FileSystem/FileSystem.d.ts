/// <reference types="node" />
import { Model } from "../Models/Model";
import { new_alert_msg } from "../DomHelper";
import { Ptr } from "./Models/Ptr";
export declare class FileSystem {
    static popup: new_alert_msg | number;
    static debug: boolean;
    static _cur_tmp_server_id: number;
    static _sig_server: boolean;
    static _disp: boolean;
    static _userid: string;
    static _timeout_reconnect: number;
    static isCordova: boolean;
    static _XMLHttpRequest: any;
    static _objects_to_send: {};
    static _timer_send: any;
    static _timer_chan: any;
    static _nb_callbacks: number;
    static _callbacks: {};
    static _type_callbacks: any[];
    static _nb_insts: number;
    static _insts: {};
    static _files_to_upload: {};
    static _ptr_to_update: {};
    static _tmp_objects: {};
    static _objects: {};
    static _url: string;
    static _port: string;
    static url_com: string;
    static url_upload: string;
    static CONNECTOR_TYPE: string;
    static _home_dir: string;
    static _password: string;
    _data_to_send: string;
    _session_num: number;
    _num_inst: number;
    make_channel_error_timer: number | Date;
    constructor();
    load(path: any, callback: any): number;
    load_type(type: any, callback: any): number;
    load_or_make_dir(dir: any, callback: any): number;
    load_ptr(ptr: any, callback: any): number;
    load_right(ptr: any, callback: any): number;
    share_model(ptr: Ptr, file_name: string, share_type: string, targetName: string): NodeJS.Timeout;
    send(data: any): NodeJS.Timeout;
    make_channel(): any;
    onConnectionError(error_code: number): void;
    static get_inst(): FileSystem;
    static set_server_id_if_necessary(out: any, obj: any): string;
    static signal_change(m: Model): NodeJS.Timeout;
    static _tmp_id_to_real(tmp_id: any, res: any): NodeJS.Timeout;
    static _create_model_by_name(name: any): any;
    static extend(): void;
    static _get_new_tmp_server_id(): number;
    static _send_chan(): any[];
    static _timeout_chan_func(): void;
    static _get_chan_data(): string;
    static _timeout_send_func(): boolean;
    static _my_xml_http_request(): any;
}
